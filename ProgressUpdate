Thanasis:
  - I will made a script to detect the different GPR rules between the 4 datasets, and then try to merge them to the final.
  - I'll see how to build the pipeline for the confidence score
  - I couldn't go anywhere with the gpruler
  - Maybe we can use this file, or some kind of file in GitHub to plan what are we going to do, or which are the main goals?
  - I also need to create a new branch for my changes, so to not make a mess :P 

Pablo Feb-02-2023:
  - I don't think the GPRuler tutorial is clear enough about how to run. Maybe I should take a second look at the paper.
  - I am also familiarizing myself with GitHub branching. I saw that you created a new notebook for the GPR merging, as long as we continue to work on
  different notebooks I don't think that overwritting code will be a problem, but it is definitely going to be important when we start working on the same notebooks.
  - The confidence score part its gonna be the most challenging, but definitely the most interesting part.
  - I've been working on the manual curation of some of the reactions. You can check the changes and updates on the Google Sheet file that I shared with you.

Pablo Feb-15-2023:
  - Creation of the Google Sheet notebook. This notebook is able to access the CHO Network Reconstruction Google Sheet file, retrieve information
  from that file and update the file.
  - Working on the get_gene_info function to retrieve information from NCBI.
 
 Pablo Feb-16-2023:
  - get_gene_info function is fixed. You can try it out by yourself with different gene IDs, even from other species to see if it works correctly.

Thanasis 17/02
   - Made a new branch, the getfix, with changes in googlesheet and comparegpr. In the end it automcatically assignes the gene information to the temporary google sheet.
   - But it only check for the first 10 genes, because it reaches a limit in the API requests. Maybe we need to get a license or somehting. 

Pablo Feb-17-2023:
   - I modified the googlesheet notebook in the new branch in order to add new features:
                                        - The gene_list for the loop at the end of the notebook is now obtained from the Rxns sheet of the temporary file on real time
                                        - I added an error cache and a time sleep of 5 secs to avoid reaching the Google API quota limit. Increasing the quota is not that simple.
                                        - I added another error cache to prevent the loop to overwrite data.
   
   - The idea would be now to generate that gene_list from the GPR_final column in which we would have the GPRs from the manual curation and also the computed GPRs from your function.
   
Pablo Feb-23-2023:
   - I kept the notebook running for a while and it retrieved information for more than a 200 genes or so... So I think that the daily quota for the API is pretty much unlimited.
   - Still working on the gene ontology function. Its in a new notebook called Gene Ontology in case you want to take a look at it.
   - Feel free to work on main or create a new branch.

Than 24/2
  - I combined the GPR_Final and GPR_Final_Thanasis to GPR_Final. See if you agree, if not you can revert the chanegs from the hisotry in google sheets.
  - I can't seem to find the ontology for CHO, the bing chat gave me the idea of maybe we can chech if the gene sequence is the same in mouse and find 
     the ontology from there? Of if we fill the genes with the ontologies of Human and Mouse?
     
Pablo Feb-28-2023:
  - I found a way to get the GO terms for CHO genes, though we need to find a way to modify the get_gene function to add them to the output.
  Here is the thing:
                    - Biomart offers a dataset with all the CHO genes Ensembl IDs and the associated GO terms.
                    - The problem is that those CHO Ensembl IDs are from the CHOK1GS assembly whereas the Ensembl IDs that we retrieve from NIH are from the PICR assembly.
                    - So we need to come up with a way to transform the IDs from PICR assembly to CHOK1GS assembly to get the GO terms.
                    - One way to do that is through the use of the orthologs dataset that I generated a couple of days ago.
                    - Fom that dataset we can map the CHOK1GS Ensembl ID from the CHO gene Entrez ID, and from that we can get the GO term.
  - Another thing that we should add to the "Gene" sheet is the gene description attribute. Since there is no gene description for CHO genes we can get this 
  information from the human ortholog genes. We can use the same approach as with the GO terms to achieve this.
 
Pablo March-01-2023:
  - I was able to update the function according to the changes that I mentioned previously and update the Google Sheet notebook aswell.
  Take a look at it to see if you get the same output aswell.
  
Pablo March-02-2023:
  - Working on a metabolites sheet with information of all the metabolites in our reconstruction. For that I created the Metabolites notebook, we can then merge it to the rest of our notebooks.

Pablo March-03-2023:
  - Metabolites sheet created with information from the iCHO1766, iCHO2291 and Recon3D models. The sheet has been added to the Google Sheet files

Pablo March-13-2023:
  - created the grouped_by_formula excel file to curate the metabolites manually. So far I have curated 27 metabolites that didn't any information. I added the formula, name, KEGG, CHEBI, INCHI and SMILES.

Than
 - I am not sure why there no biomass. If you can perform an FVA for all reactions. We need to see if the metabolites that are part of the biomass reactions are being uptaken or produced by the cell. THere is a formula in cobra that does that, try asking chatGPT. Maybe one of the demand reactions or sink reactions we removed was essential for biomass? try adding the demand and sink reactions from hefzi.
- I also saw that if you maximise the ATP demand reaction (DM_atp_c	ATP maintenance) you get flux, so the model is somewhat working. THese are the tests we want to perform later so the GEM is a good cobra model. 
1. Leak test 1: whether the closed model could produce any exchanged metabolite from nothing
2. Leak test 2: if something leaked when demand reactions for each metabolite in the model were added
3. if the model produced energy from water
4. if the model produced matter when the ATP demand was reversed
5. if the model had flux through the h[c] demand
6. if the model produced too much atp demand from glucose
7. if duplicated reactions occurred
8. if empty columns were present
9. if demand reactions had a lb >= 0; 
10. whether single-gene deletion ran.

Pablo March-20-2023:
- Addition of 3723 new to our reconstruction from Recon3D. This reactions have an asociated GPR to them.
- Working on the metabolites of those reactions.

Than
 - Can you check if you have access to GUROBU or CPLEX in USCD? The free solver GLPK takes too long.. If you do you can typoe model.solver = 'cplex' or model.solver = 'gurobi'
 - New FBA branch, with blocked reactions and dead-ends. Do you know how can we convert this to python? https://github.com/opencobra/cobratoolbox/blob/efb2c06be702aaed38349581ba73ed420251992b/src/reconstruction/modelGeneation/detectDeadEnds.m And if yes can you help in the utils.py?